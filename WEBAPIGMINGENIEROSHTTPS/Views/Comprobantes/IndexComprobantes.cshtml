@model IEnumerable<WEBAPIGMINGENIEROSHTTPS.Models.Comprobante>
@{
    ViewData["Title"] = "Lista de Comprobantes";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>


<h1 class="text-primary">Comprobantes</h1>
@if (TempData["mensaje"] != null)
{
    <div class="alert alert-success">
        @TempData["mensaje"]
       
    </div>
}


<!-- Agregar un formulario de búsqueda por RUC y otros campos -->
<form method="get" action="@Url.Action("BuscarPorRuc")" class="form-inline">
    <div class="form-group mr-2">
        <label for="ruc" class="mr-2">Buscar por RUC:</label>
        <input type="text" id="ruc" name="ruc" class="form-control border-dark" />

    </div>
    <div class="form-group mr-2">
        <label for="numeroDocumento" class="mr-2">Buscar por Número de Documento:</label>
        <input type="text" id="numeroDocumento" name="numeroDocumento" class="form-control border-dark" />
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Buscar</button>
</form>

<!-- Mostrar el número de RUC buscado, si está presente -->
@if (!string.IsNullOrEmpty(ViewBag.NroRuc))
{
    <h3 class="mt-3">Comprobantes para RUC: @ViewBag.NroRuc</h3>
}

<!-- Mostrar el número de documento buscado, si está presente -->
@if (!string.IsNullOrEmpty(ViewBag.NumeroDocumento))
{
    <h3 class="mt-3">Comprobantes para Número de Documento: @ViewBag.NumeroDocumento</h3>
}


<hr class="border border-primary border-3 opacity-75">

<p style="text-align: right;">
<p style="text-align:left">
    

    <button type="button" class="btn btn-outline-warning">
            @Html.ActionLink("Regresar al Inicio", "Index", "Home", null, new { @class = "text-black" })
    </button>
    <button type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#exampleModal">
        Informacion
    </button>
</p>

    
<!-- Button trigger modal -->


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                En el apartado F/B significa factura o boleta respectivamente
                <br />
                En el aprtado  E/R significa emitido o recibido respectivamente

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>




<table class="table-info table table-bordered">
    <thead>
        <tr>
            <th>
                ID
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Fecha)
            </th>
            <th>
                Documento
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ruc)
            </th>
            <th>
                Razon Social
            </th>
            <th>
                Descripcion
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Moneda)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Importe)
            </th>
            <th>
                F/B
            </th>
            <th>
                E/R
            </th>
            
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Idcomprobante)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fecha)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Numerodocumento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ruc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Razonsocial)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Concepto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Moneda)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Importe)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tipodocumento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Emitidorecibido)
            </td>
            
        </tr>
}
    </tbody>
</table>
<div>
        @for (int i = 0; i < ViewBag.CANT_PAGINAS; i++)
        {
            int pagina = i + 1;

            // Construir el enlace de paginación
           
            var routeValues = new { nro_pag = i, ruc = ViewBag.NroRuc, numeroDocumento = ViewBag.NumeroDocumento };

            @Html.ActionLink(
                    pagina.ToString(),
                    "IndexComprobantes",
                    routeValues,
                    new { @class = "btn btn-outline-info" }
                    )
            @:&nbsp;
        }

   



</div>
